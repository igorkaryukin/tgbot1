/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Keyword as PrismaKeyword } from "@prisma/client";

export class KeywordServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.KeywordCountArgs, "select">): Promise<number> {
    return this.prisma.keyword.count(args);
  }

  async keywords(args: Prisma.KeywordFindManyArgs): Promise<PrismaKeyword[]> {
    return this.prisma.keyword.findMany(args);
  }
  async keyword(
    args: Prisma.KeywordFindUniqueArgs
  ): Promise<PrismaKeyword | null> {
    return this.prisma.keyword.findUnique(args);
  }
  async createKeyword(args: Prisma.KeywordCreateArgs): Promise<PrismaKeyword> {
    return this.prisma.keyword.create(args);
  }
  async updateKeyword(args: Prisma.KeywordUpdateArgs): Promise<PrismaKeyword> {
    return this.prisma.keyword.update(args);
  }
  async deleteKeyword(args: Prisma.KeywordDeleteArgs): Promise<PrismaKeyword> {
    return this.prisma.keyword.delete(args);
  }
}
